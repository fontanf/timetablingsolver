# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

jobs:

  build_dist_linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install plotly
      run: pip3 install plotly
    - name: Install pandas
      run: pip3 install pandas
    - name: Install pyinstaller
      run: pip3 install pyinstaller
    - name: Install nauty
      run: sudo apt-get install -y libnauty2-dev
    - name: Build dist Linux
      run: ./scripts/build_dist_linux.sh
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TimetablingSolver-linux
        path:
          dist/TimetablingSolver-linux.zip
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TimetablingSolver-linux-fr
        path:
          dist/TimetablingSolver-linux-fr.zip

  build_dist_macos:
    runs-on: macos-12
    strategy:
      matrix:
        python-version: ["3.8"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    # Runs a single command using the runners shell
    - name: Install plotly
      run: pip3 install plotly
    - name: Install pandas
      run: pip3 install pandas
    - name: Install pyinstaller
      run: pip3 install pyinstaller
    - name: Install nauty
      run: brew install nauty
    - name: Build dist Mac OS
      run: ./scripts/build_dist_mac_intel.sh
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TimetablingSolver-macos
        path:
          dist/TimetablingSolver-macos.zip
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TimetablingSolver-macos-fr
        path:
          dist/TimetablingSolver-macos-fr.zip


  build_dist_windows:
    runs-on: windows-2022
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install plotly
      run: pip3 install plotly
    - name: Install pandas
      run: pip3 install pandas
    - name: Install pyinstaller
      run: pip3 install pyinstaller
    - name: Build dist Windows
      run: ./scripts/build_dist_windows.bat
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TimetablingSolver-windows
        path:
          dist/TimetablingSolver-windows.zip
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: TimetablingSolver-windows-fr
        path:
          dist/TimetablingSolver-windows-fr.zip
